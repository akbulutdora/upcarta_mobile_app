// Mocks generated by Mockito 5.2.0 from annotations
// in upcarta_mobile_app/test/repositories/authentication_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:upcarta_mobile_app/core/api/data_sources/local_data_storage.dart'
    as _i5;
import 'package:upcarta_mobile_app/core/api/data_sources/remote_data_source.dart'
    as _i4;
import 'package:upcarta_mobile_app/core/platform/network_info.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i2.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i4.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> authenticate({String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(
              #authenticate, [], {#email: email, #password: password}),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> register({String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(
              #register, [], {#email: email, #password: password}),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
}

/// A class which mocks [LocalDataStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataStorage extends _i1.Mock implements _i5.LocalDataStorage {
  MockLocalDataStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> getUserToken() =>
      (super.noSuchMethod(Invocation.method(#getUserToken, []),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<void> cacheUserToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#cacheUserToken, [token]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
